{
  "version": 3,
  "sources": ["../../@shoelace-style/localize/dist/index.js", "../../@shoelace-style/shoelace/dist/chunks/chunk.7BTDLTNI.js", "../../@shoelace-style/shoelace/dist/chunks/chunk.6CTB5ZDJ.js", "../../lit-html/src/static.ts", "../../lit-html/src/directives/if-defined.ts"],
  "sourcesContent": ["const connectedElements = new Set();\nconst translations = new Map();\nlet fallback;\nlet documentDirection = 'ltr';\nlet documentLanguage = 'en';\nconst isClient = (typeof MutationObserver !== \"undefined\" && typeof document !== \"undefined\" && typeof document.documentElement !== \"undefined\");\nif (isClient) {\n    const documentElementObserver = new MutationObserver(update);\n    documentDirection = document.documentElement.dir || 'ltr';\n    documentLanguage = document.documentElement.lang || navigator.language;\n    documentElementObserver.observe(document.documentElement, {\n        attributes: true,\n        attributeFilter: ['dir', 'lang']\n    });\n}\nexport function registerTranslation(...translation) {\n    translation.map(t => {\n        const code = t.$code.toLowerCase();\n        if (translations.has(code)) {\n            translations.set(code, Object.assign(Object.assign({}, translations.get(code)), t));\n        }\n        else {\n            translations.set(code, t);\n        }\n        if (!fallback) {\n            fallback = t;\n        }\n    });\n    update();\n}\nexport function update() {\n    if (isClient) {\n        documentDirection = document.documentElement.dir || 'ltr';\n        documentLanguage = document.documentElement.lang || navigator.language;\n    }\n    [...connectedElements.keys()].map((el) => {\n        if (typeof el.requestUpdate === 'function') {\n            el.requestUpdate();\n        }\n    });\n}\nexport class LocalizeController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostConnected() {\n        connectedElements.add(this.host);\n    }\n    hostDisconnected() {\n        connectedElements.delete(this.host);\n    }\n    dir() {\n        return `${this.host.dir || documentDirection}`.toLowerCase();\n    }\n    lang() {\n        return `${this.host.lang || documentLanguage}`.toLowerCase();\n    }\n    getTranslationData(lang) {\n        var _a, _b;\n        const locale = new Intl.Locale(lang.replace(/_/g, '-'));\n        const language = locale === null || locale === void 0 ? void 0 : locale.language.toLowerCase();\n        const region = (_b = (_a = locale === null || locale === void 0 ? void 0 : locale.region) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : '';\n        const primary = translations.get(`${language}-${region}`);\n        const secondary = translations.get(language);\n        return { locale, language, region, primary, secondary };\n    }\n    exists(key, options) {\n        var _a;\n        const { primary, secondary } = this.getTranslationData((_a = options.lang) !== null && _a !== void 0 ? _a : this.lang());\n        options = Object.assign({ includeFallback: false }, options);\n        if ((primary && primary[key]) ||\n            (secondary && secondary[key]) ||\n            (options.includeFallback && fallback && fallback[key])) {\n            return true;\n        }\n        return false;\n    }\n    term(key, ...args) {\n        const { primary, secondary } = this.getTranslationData(this.lang());\n        let term;\n        if (primary && primary[key]) {\n            term = primary[key];\n        }\n        else if (secondary && secondary[key]) {\n            term = secondary[key];\n        }\n        else if (fallback && fallback[key]) {\n            term = fallback[key];\n        }\n        else {\n            console.error(`No translation found for: ${String(key)}`);\n            return String(key);\n        }\n        if (typeof term === 'function') {\n            return term(...args);\n        }\n        return term;\n    }\n    date(dateToFormat, options) {\n        dateToFormat = new Date(dateToFormat);\n        return new Intl.DateTimeFormat(this.lang(), options).format(dateToFormat);\n    }\n    number(numberToFormat, options) {\n        numberToFormat = Number(numberToFormat);\n        return isNaN(numberToFormat) ? '' : new Intl.NumberFormat(this.lang(), options).format(numberToFormat);\n    }\n    relativeTime(value, unit, options) {\n        return new Intl.RelativeTimeFormat(this.lang(), options).format(value, unit);\n    }\n}\n", "// src/translations/en.ts\nimport { registerTranslation } from \"@shoelace-style/localize\";\nvar translation = {\n  $code: \"en\",\n  $name: \"English\",\n  $dir: \"ltr\",\n  carousel: \"Carousel\",\n  clearEntry: \"Clear entry\",\n  close: \"Close\",\n  copied: \"Copied\",\n  copy: \"Copy\",\n  currentValue: \"Current value\",\n  error: \"Error\",\n  goToSlide: (slide, count) => `Go to slide ${slide} of ${count}`,\n  hidePassword: \"Hide password\",\n  loading: \"Loading\",\n  nextSlide: \"Next slide\",\n  numOptionsSelected: (num) => {\n    if (num === 0) return \"No options selected\";\n    if (num === 1) return \"1 option selected\";\n    return `${num} options selected`;\n  },\n  previousSlide: \"Previous slide\",\n  progress: \"Progress\",\n  remove: \"Remove\",\n  resize: \"Resize\",\n  scrollToEnd: \"Scroll to end\",\n  scrollToStart: \"Scroll to start\",\n  selectAColorFromTheScreen: \"Select a color from the screen\",\n  showPassword: \"Show password\",\n  slideNum: (slide) => `Slide ${slide}`,\n  toggleColorFormat: \"Toggle color format\"\n};\nregisterTranslation(translation);\nvar en_default = translation;\n\nexport {\n  en_default\n};\n", "import {\n  en_default\n} from \"./chunk.7BTDLTNI.js\";\n\n// src/utilities/localize.ts\nimport { LocalizeController as DefaultLocalizationController, registerTranslation } from \"@shoelace-style/localize\";\nimport { registerTranslation as registerTranslation2 } from \"@shoelace-style/localize\";\nvar LocalizeController = class extends DefaultLocalizationController {\n};\nregisterTranslation(en_default);\n\nexport {\n  LocalizeController,\n  registerTranslation2 as registerTranslation\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {\n  html as coreHtml,\n  svg as coreSvg,\n  mathml as coreMathml,\n  TemplateResult,\n} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * an attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg | typeof coreMathml) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n"],
  "mappings": "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",
  "names": ["translation", "LocalizeController", "html", "svg", "mathml"]
}
